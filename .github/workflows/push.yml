name: docker-compose-actions-workflow
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.0.9]
        os: [ubuntu-18.04]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Run build.sh
        run: sh ./build.sh
      
      - name: Poetry install
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.0.9

      - name: Install dependencies with poetry
        run: PYTHONPATH=src/ poetry install && poetry completions bash > /etc/bash_completion.d/poetry.bash-completion
        continue-on-error: true

      - name: Install Python dependencies
        run: |
          sudo apt install -y $(grep -o ^[^#][[:alnum:]-]* "packages.list")
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
      
      - name: Test with pytest
        run: pytest --cov=src --cov-fail-under=0 tests/
        continue-on-error: true

      - name: UT
        run: PYTHONPATH=src/ poetry run pytest --cov=src --cov-fail-under=0 tests/
        continue-on-error: true

      - name: Run Coverage
        run: PYTHONPATH=src/ poetry run python -m coverage report -m
        continue-on-error: true

      - name: Generate XML Report
        run: PYTHONPATH=src/ poetry run python -m coverage xml
        continue-on-error: true


      - name: Build the localstack
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Check running containers
        run: docker ps -a

      - uses: hashicorp/setup-terraform@v1
      - run: cd terraform && terraform init -input=false && ls -lrt
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: cd terraform && terraform validate -no-color
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        run: cd terraform && terraform plan  -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: cd terraform && terraform apply -auto-approve
        continue-on-error: true

      - name: Show Destroy plan
        run: cd terraform && terraform plan -destroy
        continue-on-error: true

      - name: Destroy resources 
        id: destroy
        run: cd terraform && terraform destroy -auto-approve

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
