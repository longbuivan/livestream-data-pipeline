name: docker-compose-actions-workflow
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  python-job:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8.12]
        poetry-version: [1.0.9]
        os: [ubuntu-latest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Clean and Prepare Environment
        run: sh ./build.sh

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Poetry install
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies with poetry
        run: poetry install --no-root

      - name: UT
        run: poetry run pytest --cov=src --cov-fail-under=0 tests/

      - name: Run Coverage
        run: poetry run python -m coverage report -m

      - name: Generate XML Report
        run: poetry run python -m coverage html
      
      - name: Show Report
        if: ${{false}}
        run: cat ./htmlcov/index.html
  
  
  terraform-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build the localstack
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Check running containers
        run: docker ps -a

      - uses: hashicorp/setup-terraform@v1
      - run: cd terraform && terraform init -input=false && ls -lrt
      - name: Terraform Validate
        id: validate
        run: cd terraform && terraform validate -no-color
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        run: cd terraform && terraform plan  -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: cd terraform && terraform apply -auto-approve
        continue-on-error: true

      - name: Show Destroy plan
        run: cd terraform && terraform plan -destroy
        continue-on-error: true

      - name: Destroy resources
        id: destroy
        run: cd terraform && terraform destroy -auto-approve

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
